{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport debounce from \"lodash.debounce\";\n// Знаходимо в розмітці  форму, інпут де вказується затримка та один з елементів вибору\nconst notificationForm = {\n  submitForm: document.querySelector('.form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stateFulFilled: document.querySelector('input[value=\"fulfilled\"]'),\n};\nconst debouncedInputValue=debounce(ondelayInputInput,1000)\n// Додаємо прослуховувач подій на форму\nnotificationForm.submitForm.addEventListener('submit', onFormSubmit);\n// Додаємо прослуховувач подій на поле для вводу затримки часу\nnotificationForm.delayInput.addEventListener('input', debouncedInputValue);\n//Функція перевірки чи додатня величиниа затримки повідомлення\nfunction ondelayInputInput(event) {\n  let inputValue = event.target.value;\n  if (inputValue < 0) {\n    showNotificationForNegativeValueOfTimeDelay();\n    notificationForm.submitForm.reset();\n     }\n  \n};\n// вказуємо що робити при \"сабміті\" форми\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  \n    const delay = notificationForm.delayInput.value;\n    let state = notificationForm.stateFulFilled.checked\n      ? 'resolve'\n      : 'reject';\n    executePromise(state, delay)\n      .then(showFulfilledNotification)\n      .catch(showRejectNotification);\n    notificationForm.submitForm.reset();\n };\n// Створюємо функцію яка показує повідомлення при вдалому виконанні промісу\nfunction showFulfilledNotification(delay) {\n  setTimeout(() => {\n      iziToast.success({\n      timeout: 3000,\n      title: '',\n      icon: '',\n      message: `✅ Fulfilled promise in ${delay}ms`,\n      position: 'topCenter',\n    });\n  }, delay);\n};\n// Створюємо функцію яка показує повідомлення при виконанні промісу з відмовою\nfunction showRejectNotification(delay) {\n  setTimeout(() => {\n      iziToast.error({\n      timeout: 3000,\n      title: '',\n      icon: '',\n      message: `❌ Rejected promise in ${delay}ms`,\n      position: 'topCenter',\n    });\n  }, delay);\n};\n// Створюємо функцію яка  показує попередження про введення відємного відліку часу\nfunction showNotificationForNegativeValueOfTimeDelay() {\n  iziToast.error({\n      timeout: 3000,\n      title: '',\n      message: `Please enter positive value for time delay`,\n      position: 'topCenter',\n    });\n}\n// Створюємо проміс\nfunction executePromise(state, delay) {\n    return new Promise((resolve, reject) => { if (state === 'resolve') { resolve(delay); } else { reject(delay); }; });\n};\n\n\n"],"names":["notificationForm","debouncedInputValue","debounce","ondelayInputInput","onFormSubmit","event","showNotificationForNegativeValueOfTimeDelay","delay","state","executePromise","showFulfilledNotification","showRejectNotification","iziToast","resolve","reject"],"mappings":"2GAIA,MAAMA,EAAmB,CACvB,WAAY,SAAS,cAAc,OAAO,EAC1C,WAAY,SAAS,cAAc,qBAAqB,EACxD,eAAgB,SAAS,cAAc,0BAA0B,CACnE,EACMC,EAAoBC,EAASC,EAAkB,GAAI,EAEzDH,EAAiB,WAAW,iBAAiB,SAAUI,CAAY,EAEnEJ,EAAiB,WAAW,iBAAiB,QAASC,CAAmB,EAEzE,SAASE,EAAkBE,EAAO,CACfA,EAAM,OAAO,MACb,IACfC,IACAN,EAAiB,WAAW,QAGhC,CAEA,SAASI,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EAElB,MAAME,EAAQP,EAAiB,WAAW,MAC1C,IAAIQ,EAAQR,EAAiB,eAAe,QACxC,UACA,SACJS,EAAeD,EAAOD,CAAK,EACxB,KAAKG,CAAyB,EAC9B,MAAMC,CAAsB,EAC/BX,EAAiB,WAAW,OAEhC,CACA,SAASU,EAA0BH,EAAO,CACxC,WAAW,IAAM,CACbK,EAAS,QAAQ,CACjB,QAAS,IACT,MAAO,GACP,KAAM,GACN,QAAS,0BAA0BL,CAAK,KACxC,SAAU,WAChB,CAAK,CACF,EAAEA,CAAK,CACV,CAEA,SAASI,EAAuBJ,EAAO,CACrC,WAAW,IAAM,CACbK,EAAS,MAAM,CACf,QAAS,IACT,MAAO,GACP,KAAM,GACN,QAAS,yBAAyBL,CAAK,KACvC,SAAU,WAChB,CAAK,CACF,EAAEA,CAAK,CACV,CAEA,SAASD,GAA8C,CACrDM,EAAS,MAAM,CACX,QAAS,IACT,MAAO,GACP,QAAS,6CACT,SAAU,WAChB,CAAK,CACL,CAEA,SAASH,EAAeD,EAAOD,EAAO,CAClC,OAAO,IAAI,QAAQ,CAACM,EAASC,IAAW,CAAMN,IAAU,UAAaK,EAAQN,CAAK,EAAYO,EAAOP,CAAK,CAAK,CAAE,CACrH"}